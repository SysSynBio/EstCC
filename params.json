{"name":"EstCC","tagline":"","body":"### DESCRIPTION\r\n\r\nCode to estimate the channel capacity between a set of (signal, response)\r\nordered pairs\r\n\r\n### DEPENDENCIES\r\n\r\nBuilt using scala v2.11.0, sbt v0.13.5, and java v1.7.0_51. In order to build\r\nan executable JAR file, run `sbt one-jar` in the project's root directory\r\nto generate the JAR file.  Additional information on this plugin can be found \r\nat https://github.com/sbt/sbt-onejar\r\n\r\nThis code also contains a number of methods from the [Colt Project](http://acs.lbl.gov/software/colt/).  This \r\ndependency is included in the build.sbt file.\r\n\r\n### USAGE\r\n\r\nUpon successful compilation, the one-jar executable is located in \r\ntarget/scala-2.1x/ and can be copied/renamed to any other directory for use:\r\n\r\ni.e. `cp target/scala-2.1x/estcc_2.1x-0.1-SNAPSHOT-one-jar.jar /my/working/dir/MyEstCC.jar`\r\n\r\nGiven a plaintext file with data organized into whitespace-delimited columns,\r\nthe channel capacity can be estimated using the following command:\r\n\r\n`java -jar MyEstCC.jar -d datafile (-p paramfile)`\r\n\r\nwhere the optional 'paramfile' contains calculation parameters modified from \r\ntheir default values and 'datafile' contains the whitespace-delimited columns\r\nof data\r\n\r\nA full description of the options can be seen in the usage text:\r\n\r\n`java -jar MyEstCC.jar --help`\r\n\r\n### CONFIGURATION\r\n\r\nDefault channel capacity calculation parameters are present in both the \r\n`src/main/scala/infcalcs/InfConfig.scala` file and the example `params.txt` \r\nfile, which contains all possible parameters and their associated default \r\nvalues formatted for input to the executable JAR file. As mentioned \r\npreviously, these values can be changed upon introduction of a parameter \r\nfile.  The parameter file is formatted with two tab-delimited columns,\r\nso that the parameter string is in the first column and the parameter value\r\nin one of 5 possible (parameter-dependent) formats is in the second column:\r\n\r\n##### List parameters:\r\n- 2 or 3 comma-delimited numbers: 'minimum','maximum','increment' where \r\n   'maximum' is included and 'increment' is optional, defaulting to 1 \r\n   (i.e. 0,10,2 produces the list: List(0.0, 2.0, 4.0, 6.0, 8.0, 10.0), \r\n   and 4,8 produces: List(4.0, 5.0, 6.0, 7.0, 8.0))\r\n- a sequence of space-delimited numbers (i.e. 0 2 4 6 8 10 produces \r\n  List(0.0, 2.0, 4.0, 6.0, 8.0, 10.0)).\r\n- \"None\" to indicate the absence of a list (only applicable for \r\n   response/signal value or bin parameters\r\n\r\n##### Numeric parameters:\r\n- a single number\r\n\r\n##### String parameters:  \r\n- a string with no whitespace characters\r\n \r\n**Note that for assigning bin numbers, \"Values\" take precedence over \"Bins.\"** This\r\nmeans that if `signalBins` is specified and `signalValues` is *not* set to `None` in \r\nthe parameter file, the calculation will use a single number of bins for the signal\r\nvariable (since `signalValues` has a default value) instead of the various numbers of \r\nbins defined with `signalBins`. Similarly, if both `responseValues` and `responseBins`\r\nare defined in the parameter file, `responseBins` will be disregarded in favor of \r\n`responseValues`.\r\n\r\n### OUTPUT\r\n\r\nThe output is recorded in a series of files containing the estimated mutual\r\ninformation for a particular signal distribution. Each file is identified by \r\nan index and the number of signal bins (e.g. `out_47_s19.dat`) with the \r\nexception of the uniform signal distribution (`out_unif_s19.dat`). Contained\r\nin each space-delimited file is the number of signal bins, the number of \r\nresponse bins, the estimated mutual information, its 95% confidence interval \r\nand the estimated mutual information and confidence interval for a series of \r\nrandomizations of the data set.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}